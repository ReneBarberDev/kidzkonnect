@model kidzkonnect2._0.Models.UtilisateurEtProfils
<!-- Définition de la page -->
@{
    ViewData["Title"] = "Index";
}
<!-- Styles CSS -->
<style>

    /* Styles pour les images avec hauteur fixe */
    .img-fixed-height {
        height: 300px;
        object-fit: cover;
    }

    /* Styles pour les cartes de profils avec fond gris */
    .colonne1 {
        background-color: #E9E8E9; /* Fond gris clair */
        border: 3px solid #E9E8E9; /* Bordure cohérente avec les exemples statiques */
        border-radius: 10px;
        margin-bottom: 20px; /* Espace entre les cartes */
    }
    /* Style pour l'overlay */
    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        min-height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(0, 0, 0, 0.7); /* Fond semi-transparent */
        color: white;
        font-size: 18px;
        opacity: 0; /* Initialement invisible */
        transition: opacity 0.3s ease; /* Animation de transition */
    }

    /* Afficher l'overlay au survol */
    .image-container:hover .overlay {
        opacity: 1; /* Montrer l'overlay au survol */
    }

     /* Styles spécifiques pour le bouton 'modifier' */
    .btn-edit {
        background-color: #F6821B;
        color: white;
        border: 2px solid #F6821B;
    }

        .btn-edit:hover {
            background-color: white;
            color: #F6821B;
        }

    /* Styles spécifiques pour le bouton 'détails' */
    .btn-details {
        background-color: #FD58BD;
        color: white;
        border: 2px solid #FD58BD;
    }

        .btn-details:hover {
            background-color: white;
            color: #FD58BD;
        }

    /* Styles pour le bouton 'details' et 'add profile' */
    .btn-details {
        background-color: #FD58BD;
        color: white;
        border: 2px solid #FD58BD;
    }

        .btn-details:hover {
            background-color: white;
            color: black;
        }

    /* Styles pour le bouton 'edit' */
    .btn-edit {
        background-color: #F6821B;
        color: white;
        border: 2px solid #F6821B;
    }

        .btn-edit:hover {
            background-color: white;
            color: black;
        }

    /* Style pour l'overlay */
    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        max-height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(0, 0, 0, 0.7); /* Fond semi-transparent */
        color: white;
        font-size: 18px;
        opacity: 0; /* Initialement invisible */
        transition: opacity 0.3s ease; /* Animation de transition */
    }

    /* Style pour afficher l'overlay au survol */
    .image-container:hover .overlay {
        opacity: 0.4;
    }

    /* Style pour les cartes avec bordures */
    .card {
        border: 3px solid #E9E8E9;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .card-text {
        color: black;
    }

    /* Style pour la colonne compte, pris sur le site:https://uiverse.io/Codewithvinay/afraid-dodo-14 */
    .box {
        position: relative;
        width: 300px;
        height: 400px;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: 0.5s;
        z-index: 1;
    }

        .box::before {
            content: ' ';
            position: absolute;
            top: 0;
            left: 50px;
            width: 50%;
            height: 100%;
            text-decoration: none;
            background: #fff;
            border-radius: 8px;
            transform: skewX(15deg);
            transition: 0.5s;
        }

        .box::after {
            content: '';
            position: absolute;
            top: 0;
            left: 50;
            width: 50%;
            height: 100%;
            background: #fff;
            border-radius: 8px;
            transform: skewX(15deg);
            transition: 0.5s;
            filter: blur(30px);
        }

        .box:hover:before,
        .box:hover:after {
            transform: skewX(0deg) scaleX(1.3);
        }

        .box:before,
        .box:after {
            background: linear-gradient(315deg, #F6821B, #FD58BD)
        }

        .box span {
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 5;
            pointer-events: none;
        }

            .box span::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 0;
                height: 0;
                border-radius: 8px;
                background: rgba(255, 255, 255, 0.1);
                backdrop-filter: blur(10px);
                opacity: 0;
                transition: 0.1s;
                animation: animate 2s ease-in-out infinite;
                box-shadow: 0 5px 15px rgba(0,0,0,0.08)
            }

            .box span::before {
                top: -40px;
                left: 40px;
                width: 50px;
                height: 50px;
                opacity: 1;
            }

            .box span::after {
                content: '';
                position: absolute;
                bottom: 0;
                right: 0;
                width: 100%;
                height: 100%;
                border-radius: 8px;
                background: rgba(255, 255, 255, 0.1);
                backdrop-filter: blur(10px);
                opacity: 0;
                transition: 0.5s;
                box-shadow: 0 5px 15px rgba(0,0,0,0.08);
                animation-delay: -1s;
            }

            .box span:after {
                bottom: -40px;
                right: 40px;
                width: 50px;
                height: 50px;
                opacity: 1;
            }

        .box .content {
            position: absolute; /* Change la position en absolue */
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); /* Centre la boîte */
            width: 270px; /* Ajuste la largeur selon tes besoins */
            height: 354px; /* Ajuste la hauteur selon tes besoins */
            padding: 20px 15px; /* Ajuste le rembourrage selon tes besoins */
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            z-index: 1;
            transform: 0.5s;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .box .content h2 {
                font-size: 20px;
                color: #fff;
                margin-bottom: 10px;
            }

    .first-column {
        display: flex;
        flex-direction: column;
        align-items: center; /* Centre verticalement le contenu dans la colonne */
    }

    /* Couleur des colonnes */
    .colonne1 {
        background-color: #E9E8E9;
    }

    .custom-card-body {
        height: 150px; 
        align-items: flex-start; 
    }
</style>

<!-- Contenu de la page -->
<div class="container text-center my-5">
    <h3 class="title">Account</h3>

    <!-- Colonne pour les informations du compte -->
    <div class="row">
        <!-- Colonne pour les informations du compte -->
        <div class="col-md-4 d-flex align-items-center">
            <!-- Colonne pour l'image -->
            <div class="flex-column">
                <!-- Photo de l'utilisateur -->
                <img class="card-img-top img-fixed-height mb-3" src="@Model.User.UserPicture" alt="User Picture">
            </div>
            <div class="box mr-3">
                <span></span>
                <div class="content">
                    <div class="flex-column">
                        <!-- Informations sur le compte -->
                        <div class="card-body">
                            <p class="card-text">Name : @Model.User.Prenom</p>
                            <p class="card-text">Last Name : @Model.User.Nom</p>
                            <p class="card-text">Birth Date : <br /> @(Model.User.DateNaissance.HasValue ? Model.User.DateNaissance.Value.ToString("dd/MM/yyyy") : "N/A")</p>
                            <p class="card-text">Email : @Model.User.Courriel</p>
                            <p class="card-text">Address : @Model.User.Adresse</p>
                        </div>
                        <!-- Boutons 'Modifier le Compte' et 'Ajouter un profil' -->
                        <a asp-action="Edit" asp-controller="Utilisateurs" asp-route-id="@Model.User.IdUtilisateur" class="btn btn-edit">Edit Account</a>
                        <a asp-action="Create" asp-controller="ProfilEnfants" class="btn btn-details">Add a profile</a>

                    </div>
                </div>
            </div>
        </div>
        
        <!-- Affichage dynamique des profils enfants -->
        <div class="col-md-8">
            <div class="row">
                @foreach (var profil in Model.ProfilEnfants)
                {
                    <div class="col-md-6 mb-3">
                        <div class="card flex-column colonne1">
                            <div class="image-container position-relative">
                                @if (profil.AvatarFkNavigation != null && profil.AvatarFkNavigation.ImagePath != null)
                                {
                                    <img class="card-img-top img-fixed-height mb-3" src="@Url.Content(profil.AvatarFkNavigation.ImagePath )" alt="Image de Profil">
                                }
                                else
                                {
                                    <img class="card-img-top img-fixed-height mb-3" src="/images/avatar2.jpg" alt="Default Image">
                                }
                                <div class="overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center">
                                    <div>
                                        @if (!string.IsNullOrEmpty(profil.Prenom))
                                        {
                                            <p>@profil.Prenom</p>
                                        }
                                        @if (!string.IsNullOrEmpty(profil.Nom))
                                        {
                                            <p>@profil.Nom</p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="text-center mb-3">
                                <a asp-action="Edit" asp-route-id="@profil.IdProfil" class="btn btn-edit">Edit</a>
                                <a asp-action="Details" asp-route-id="@profil.IdProfil" class="btn btn-details">Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>   
    </div>
</div>
