@model kidzkonnect2._0.Models.UtilisateurEtProfils
<!-- Définition de la page -->
@{
    ViewData["Title"] = "Details";
}

<!-- Styles CSS -->
<style>
    /* Style pour l'avatar en petit */
    .small-avatar {
        width: 70px;
        height: 70px;
        object-fit: cover;
        border-radius: 50%;
        margin-bottom: 10px; 
    }

    /* Style des profils enfant dans les containes de couleur, inspiré du site: https://uiverse.io/ */
    .container_children {
        height: 400px;
        border-radius: 1em;
        overflow: hidden;
        box-shadow: 0 10px 20px #dbdbdb;
        font-family: sans-serif;
    }

    .palette {
        display: flex;
        height: 86%;
        width: 100%;
    }

    .color {
        height: 100%;
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        letter-spacing: 1px;
        transition: flex 0.1s linear;
    }

        .color span {
            opacity: 0;
            transition: opacity 0.1s linear;
        }

        .color:nth-child(1) {
            background: #6DCA3E;
        }

        .color:nth-child(2) {
            background: #00B0F0;
        }

        .color:nth-child(3) {
            background: #8535F3;
        }

        .color:nth-child(4) {
            background: #FD58BD;
        }

        .color:nth-child(5) {
            background: #e76f51;
        }

        .color:hover {
            flex: 2;
            box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        }

            .color:hover span {
                opacity: 1;
            }

    #sous_titre {
        height: 20%;
        width: 100%;
        background: white;
        display: flex;
        flex-direction: column; 
        align-items: center; 
        justify-content: center;
        box-sizing: border-box;
        color: #bebebe;
    }

    .card-title,
    .card-text {
        margin: 5px 0;
    }

    /* Style de l'encadré du user, , inspiré du site: https://uiverse.io/ */
    .card-client {
        background: #E9E8E9;
        width: 20rem;
        padding-top: 25px;
        padding-bottom: 25px;
        padding-left: 20px;
        padding-right: 20px;
        border: 4px solid #A9A9A9;
        box-shadow: 0 6px 10px rgba(207, 212, 222, 1);
        border-radius: 10px;
        text-align: center;
        color: black;
        font-family: "Poppins", sans-serif;
        transition: all 0.3s ease;
    }

        .card-client:hover {
            transform: translateY(-10px);
        }

    .user-picture {
        overflow: hidden;
        object-fit: cover;
        width: 5rem;
        height: 5rem;
        border: 4px solid #A9A9A9;
        border-radius: 999px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: auto;
    }

        .user-picture svg {
            width: 2.5rem;
            fill: currentColor;
        }

    .name-client {
        margin: 0;
        margin-top: 20px;
        font-weight: 600;
        font-size: 18px;
    }

        .name-client span {
            display: block;
            font-weight: 200;
            font-size: 16px;
        }

    /* Styles pour le bouton 'Konnect' et 'UnKonnect' */
    .btn-konnect {
        color: white;
        border: 2px solid black;
    }
        .btn-konnect:hover {
            background-color: white;
            color: black;
        }
</style>

<!-- Titre de la page -->
<h3 class="title">Account details</h3>

<!-- Information du parent -->
<div class="card-client mx-auto mt-3 mb-3">
    <div class="user-picture">
        <img class="card-img-top img-fixed-height mb-3" src="@Model.User.UserPicture" alt="User Picture">
    </div>
    <p class="name-client">
        @Model.User.Prenom @Model.User.Nom
        <span>
            @Model.User.Adresse
        </span>
    </p>
</div>

<!-- Informations des enfants -->
<div class="container_children text-center my-5">
    <div class="palette">
        @foreach (var profile in Model.ProfilEnfants)
        {
            //  Pour calculer l'âge
            int age = 0;
            if (profile.DateNaissance.HasValue)
            {
                age = DateTime.Today.Year - profile.DateNaissance.Value.Year;
                if (DateTime.Today < profile.DateNaissance.Value.AddYears(age))
                {
                    age--;
                }
            }

            <div class="color">
                <img src="@Url.Content(profile.AvatarFkNavigation.ImagePath)" alt="Avatar" class="small-avatar">
                <h5 class="card-title">@Html.DisplayFor(modelItem => profile.Prenom) @Html.DisplayFor(modelItem => profile.Nom)</h5>
                <p class="card-text">Genre: @Html.DisplayFor(modelItem => profile.Genre)</p>
                <p class="card-text">Age: @age</p>
                <p class="card-text">Hobbies: @Html.DisplayFor(modelItem => profile.Interets)</p>
                <p class="card-text">Restrictions: @Html.DisplayFor(modelItem => profile.Defis)</p>
            </div>
        }
    </div>
    <div id="sous_titre">
        <span>Children profiles</span>
    </div>
</div>


